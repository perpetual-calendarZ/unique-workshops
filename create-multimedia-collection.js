const { KeyringProvider } = require('@unique-nft/accounts/keyring');
const { Sdk } = require('@unique-nft/sdk');
const { mnemonic } = require('./config');

async function main() {
  console.log('Iniciando a cria√ß√£o da Cole√ß√£o Multim√≠dia...');

  const signer = await KeyringProvider.fromMnemonic(mnemonic);
  const address = signer.getAddress();

  const sdk = new Sdk({
    baseUrl: 'wss://ws-opal.unique-nft.network',
    signer,
  });

  const collectionData = {
    name: 'Tokens Multim√≠dia',
    description: 'Uma cole√ß√£o para NFTs que cont√™m m√∫ltiplas m√≠dias.',
    tokenPrefix: 'MMT',

    // Schema customizado para nossas m√≠dias
    schema: {
      schemaName: 'unique',
      schemaVersion: '1.0.0',
      
      // A imagem principal que aparece no explorador
      // <-- AQUI FOI FEITA A ALTERA√á√ÉO com o link do seu arquivo .txt
      coverPicture: { url: 'ipfs://bafybeieuf7kqraisrdcihhuegayfxl6abhrsia443p4kr7hveizvmwehdu' },
      
      image: { urlTemplate: 'ipfs://{id}' }, // Placeholder para o CID do IPFS

      attributesSchemaVersion: '1.0.0',
      attributesSchema: {
        0: { name: { _: 'Nome da Obra' }, type: 'string' },
        1: { name: { _: 'Capa (JPG)' }, type: 'string', isUrl: true }, 
        2: { name: { _: 'Token (V√≠deo)' }, type: 'string', isUrl: true }, // Mudei para "Token (V√≠deo)" para corresponder ao seu arquivo
        3: { name: { _: 'M√∫sica (MP3)' }, type: 'string', isUrl: true },
      }
    }
  };

  const { collectionId, error } = await sdk.collections.creation.submitWaitResult({
    address,
    ...collectionData,
  });

  if (error) {
    console.error('Ocorreu um erro ao criar a cole√ß√£o multim√≠dia:', error);
    throw error; // Lan√ßa o erro para ser capturado pelo catch principal
  }

  console.log('====================================================');
  console.log('üéâ SUCESSO! Cole√ß√£o Multim√≠dia criada! üéâ');
  console.log(`   GUARDE ESTE ID: ${collectionId}`); // GUARDE ESTE N√öMERO!
  console.log(`   Veja a cole√ß√£o: https://uniquescan.io/opal/collections/${collectionId}`);
  console.log('====================================================');
}

main().catch((error) => {
  console.error('Erro cr√≠tico:', error);
  // Define o c√≥digo de sa√≠da como 1 para indicar que o script falhou.
  // O processo terminar√° naturalmente ap√≥s isso.
  process.exitCode = 1;
});